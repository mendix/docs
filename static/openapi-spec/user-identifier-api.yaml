openapi: 3.1.0
info:
  title: User Identifiers API
  version: 1.0.0
  contact:
    name: Mendix Support
    url: 'https://support.mendix.com'
    email: support@mendix.com
  termsOfService: 'https://www.mendix.com/terms-of-use/'
  description: The API allows a Mendix Admin to retrieve identifiers of company users by providing their email addresses.
paths:
  /uuids:
    post:
      tags:
        - user-identifiers
      summary: Get UUIDs of provided user email addresses
      requestBody:
        description: Request payload containing an array of email addresses
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userEmailAddresses'
      responses:
        '200':
          $ref: '#/components/responses/userIdentifiersResponse'
        '400':
          $ref: '#/components/responses/invalidRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbiddenScope'
        '405':
          summary: Only the status code can be used to identify the error. Returned response payload is automatically generated by the Mendix runtime which differs from the common error response format defined in this document.
          $ref: '#/components/responses/methodNotAllowed'
        '500':
          $ref: '#/components/responses/internalServerError'
      operationId: get-user-identifiers
      description: Get an array of all successfully found users with their respective UUIDs. This API call can only be used by a Mendix Admin.
tags:
  - name: user-identifiers
servers:
  - url: 'https://user-identifiers-api.home.mendix.com/v1'
components:
  schemas:
    patError:
      type: string
    error:
      type: object
      properties:
        statusCode:
          type: integer
          examples:
            - 401
        errorCode:
          type: string
          examples:
            - INVALID_TOKEN
        errorText:
          type: string
          examples:
            - 'Bearer token is either expired or not yet valid, please supply a valid token'
        displayText:
          type: string
          examples:
            - 'Something went wrong. If the problem persists, please let us know!'
      required:
        - statusCode
        - errorCode
        - errorText
    userIdentifiersPayload:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/userIdentifier'
          description: Array of user identifiers
        error:
          $ref: '#/components/schemas/userIdentifiersErrors'
      required:
        - identifiers
        - error
    userIdentifier:
      type: object
      properties:
        emailAddress:
            $ref: '#/components/schemas/emailAddress'
        uuid:
            $ref: '#/components/schemas/uuid'
      required:
        - emailAddress
        - uuid
    userIdentifiersErrors:
      type: object
      properties:
        message:
          type: string
          description: Explanation of the error
          examples:
            - No user(s) found with the following email address(es) within your company
        emailAddresses:
          type: array
          items:
            $ref: '#/components/schemas/userEmailAddress'
          minItems: 1
          description: Array of user email addresses.
    userEmailAddresses:
      type: object
      description: List of email addresses causing the error
      properties:
        emailAddresses:
          type: array
          items:
            $ref: '#/components/schemas/userEmailAddress'
          minItems: 1
          description: Array of user email addresses.
      required:
        - emailAddresses
    userEmailAddress:
      type: object
      description: User's email address
      properties:
        emailAddress:
            $ref: '#/components/schemas/emailAddress'
      required:
        - emailAddress
    emailAddress:
      type: string
      maxLength: 200
      description: The email address of a user.
      examples:
        - jane.doe@domain.tld
    uuid:
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      minLength: 36
      maxLength: 36
      description: Universally Unique IDentifier.
      examples:
        - c5f3afba-cc28-4f56-b922-1e606807bed4
  responses:
    userIdentifiersResponse:
      description: OK
      headers:
        Content-Type:
          schema:
            type: string
            examples:
              - application/json; charset=utf-8
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userIdentifiersPayload'
    invalidRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            invalidRequest:
              summary: Invalid Request
              value:
                statusCode: 400
                errorCode: INVALID_REQUEST
                errorText: 'Bearer token not provided, please supply a valid bearer token'
                displayText: 'Something went wrong. If the problem persists, please let us know!'
    unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/error'
              - $ref: '#/components/schemas/patError'
          examples:
            unauthorizedExpiredToken:
              value:
                statusCode: 401
                errorCode: UNAUTHORIZED
                errorText: 'Bearer token is either expired or not yet valid, please supply a valid bearer token'
                displayText: 'Something went wrong. If the problem persists, please let us know!'
            unauthorizedInactiveUser:
              value:
                statusCode: 401
                errorCode: UNAUTHORIZED
                errorText: 'Bearer token is invalid/malformed. The User[{user_uuid}] for which the token was issued is not active'
                displayText: 'Something went wrong. If the problem persists, please let us know!'
            unauthorizedChangePassword:
              value:
                statusCode: 401
                errorCode: UNAUTHORIZED
                errorText: 'Bearer token is invalid/malformed. The User[{user_uuid}] for which the token was issued must change his/her password'
                displayText: 'Something went wrong. If the problem persists, please let us know!'
            unauthorizedInvalidToken:
              value:
                statusCode: 401
                errorCode: UNAUTHORIZED
                errorText: 'Bearer token is not a valid User Access Token, Client[{client_id}]'
                displayText: 'Something went wrong. If the problem persists, please let us know!'
            unauthorizedNoAdminRole:
              value:
                statusCode: 401
                errorCode: UNAUTHORIZED
                errorText: 'The User[{user_uuid}] does not have Mendix Admin role to perform this operation'
                displayText: 'Something went wrong. If the problem persists, please let us know!'
            invalidAuthorizationHeader:
              value: 'Invalid or missing authorization header'
            cannotExtractPAT:
              value: 'PAT cannot be extracted from the authorization header'
            invalidPAT:
              value: 'Supplied personal access token is invalid. Response: ...'
    forbiddenScope:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            forbiddenScope:
              value:
                statusCode: 403
                errorCode: FORBIDDEN
                errorText: 'Bearer token is missing required scope(s): {required_scopes}, provided scope(s): {provided_scopes}'
                displayText: 'Something went wrong. If the problem persists, please let us know!'
    internalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/error'
              - $ref: '#/components/schemas/patError'
          examples:
            internalServerError:
              value:
                statusCode: 500
                errorCode: INTERNAL_SERVER_ERROR
                errorText: 'Something went wrong. Internal server error: {error_detail_description}'
                displayText: 'Something went wrong. If the problem persists, please let us know!'
            resourceHeaderMissing:
              value: 'Resource header is missing please check plugin configuration'
            accessTokenEndpointNonReachable:
              value: 'Unable to access token exchange endpoint[...]'
            tokenExchangeFailure:
              value: 'Failed to request token exchange. Response: [...]'
            tokenExtractionFailed:
              value: 'Failed to extract access token from token exchange response.'
    methodNotAllowed:
      description: Method Not Allowed
      content:
        text/plain:
          examples:
            emptyBody:
              value: ""
  securitySchemes:
    PersonalAccessToken:
      name: Authorization
      type: apiKey
      in: header
      description: 'See [Create a Personal Access Token](https://docs.mendix.com/community-tools/mendix-profile/user-settings/#pat) for documentation how to request a token and how to use it.<br/> Contents of the header should be `MxToken <Your PAT>`.'
security:
  - PersonalAccessToken: []
